name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ matrix.host }}

    strategy:
      matrix:
        host:
          - lima

    steps:
      - name: Clear Space
        run: sudo rm -rf /usr/share /usr/local /opt || true

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: | # deploy-rs won't read nixConfig
            accept-flake-config = true
            extra-substituters = https://cache.garnix.io
            extra-trusted-public-keys = cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g=

      - name: Setup TailScale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_CLIENT_SECRET }}
          tags: tag:deploy

      - name: Setup SSH
        run: | # avoid using magicDNS due to bugs
          mkdir -p ~/.ssh
          ipv4="$(tailscale ip -4 ${{ matrix.host }})"
          ssh-keyscan "$ipv4" >> ~/.ssh/known_hosts
          echo "ipv4=$ipv4" >> "$GITHUB_ENV"

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#deploy

      - name: Checks...
        uses: poseidon/wait-for-status-checks@v0.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignore_pattern: deploy \(.+\)

      - name: Build & Deploy
        run: |
          max_retries=3
          count=0
          until deploy -s -r build --hostname "$ipv4" --ssh-user deploy .#${{ matrix.host }}
          do
            exit_code=$?
            count=$((count + 1))
            if [ $count -ge $max_retries ]; then
              echo "Build & Deploy failed after $count attempts."
              exit $exit_code
            fi
            echo "Retrying Build & Deploy ($count/$max_retries)..."
            sleep 10
          done

    # - name: Upload Build
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: build
    #     path: build/

    # - name: Get Deployment
    #   env:
    #     GH_TOKEN: ${{ github.token }}
    #   run: |
    #     deploy_prev=$(gh api -X GET /repos/${{ github.repository }}/actions/workflows/deploy.yaml/runs -F status=success -F branch=${{ github.ref_name }} -F per_page=2 | jq -r '.workflow_runs[1].id')
    #     echo "deploy_prev=$deploy_prev" >> "$GITHUB_ENV"

    # - name: Download Build
    #   uses: actions/download-artifact@v4
    #   if: env.deploy_prev != ''
    #   with:
    #     name: build
    #     run-id: ${{ env.deploy_prev }}
    #     path: prev

    # - name: Diff Builds
    #   if: env.deploy_prev != ''
    #   run: |
    #     nvd diff prev/build build
